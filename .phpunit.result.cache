{"version":1,"defects":{"Error":4,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #0":3,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #1":3,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #2":3,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #3":3,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #4":3,"Tests\\Domain\\PhoneTest::shouldCreateCorrectlyWithCorrectPhone with data set #0":3,"Tests\\Domain\\PhoneTest::shouldCreateCorrectlyWithCorrectPhone with data set #1":3,"Tests\\Domain\\PhoneTest::shouldCreateCorrectlyWithCorrectPhone with data set #2":3,"CPFTest::shouldFailIfCPFHasInvalidLength with data set #0":3,"CPFTest::shouldFailIfCPFHasInvalidLength with data set #1":3,"CPFTest::shouldFailIfCPFAreInvalids with data set #2":3},"times":{"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfLengthIsLowerThanTen":0,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfLengthIsGraterThanEleven":0,"Error":0,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #0":0,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #1":0,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #2":0,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #3":0,"Tests\\Domain\\PhoneTest::shouldntCreatePhoneIfIsFormattedWrong with data set #4":0,"Tests\\Domain\\PhoneTest::shouldCreateCorrectlyWithCorrectPhone with data set #0":0,"Tests\\Domain\\PhoneTest::shouldCreateCorrectlyWithCorrectPhone with data set #1":0,"Tests\\Domain\\PhoneTest::shouldCreateCorrectlyWithCorrectPhone with data set #2":0,"Tests\\Domain\\PhoneTest::shouldReturnCorrectValues":0,"CPFTest::shouldFailIfCPFHasInvalidLength with data set #0":0.002,"CPFTest::shouldFailIfCPFHasInvalidLength with data set #1":0,"CPFTest::shouldFailIfCPFAreInvalids with data set #0":0.002,"CPFTest::shouldFailIfCPFAreInvalids with data set #1":0,"CPFTest::shouldFailIfCPFAreInvalids with data set #2":0,"CPFTest::shouldFailIfCPFAreInvalids with data set #3":0}}